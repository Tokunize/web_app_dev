import { z } from 'zod';

export const FormSchema = z.object({
  title: z.string().min(1, "Title is required"),
  description: z.string().optional(),
  details: z.any().optional(), // JSON field
  bedrooms: z.number().min(0, "Number of bedrooms must be at least 0"),
  bathrooms: z.number().min(0, "Number of bathrooms must be at least 0"),
  projected_annual_return: z.number().min(0, "Projected annual return must be a positive number").optional(),
  price: z.number().min(0, "Price must be a positive number"),
  location: z.string().min(1, "Location is required"),
  country: z.string().optional(),
  property_type: z.string().min(1, "Property type is required"),
  size: z.number().min(0, "Size must be a positive number"),
  year_built: z.number().min(1900, "Year built must be 1900 or later"),
  image: z.array(z.string().url()).optional(),
  video_urls: z.array(z.string().url()).optional(),
  amenities: z.any().optional(), // JSON field
  active: z.boolean().optional(),
  total_investment_value: z.number().min(0, "Total investment value must be a positive number"),
  underlying_asset_price: z.number().min(0, "Underlying asset price must be a positive number"),
  closing_costs: z.number().min(0, "Closing costs must be a positive number"),
  upfront_fees: z.number().min(0, "Upfront fees must be a positive number"),
  operating_reserve: z.number().min(0, "Operating reserve must be a positive number"),
  projected_annual_yield: z.number().min(0, "Projected annual yield must be a positive number"),
  projected_rental_yield: z.number().min(0, "Projected rental yield must be a positive number"),
  annual_gross_rents: z.number().min(0, "Annual gross rents must be a positive number"),
  property_taxes: z.number().min(0, "Property taxes must be a positive number"),
  homeowners_insurance: z.number().min(0, "Homeowners insurance must be a positive number"),
  property_management: z.number().min(0, "Property management must be a positive number"),
  dao_administration_fees: z.number().min(0, "DAO administration fees must be a positive number"),
  annual_cash_flow: z.number().min(0, "Annual cash flow must be a positive number"),
  monthly_cash_flow: z.number().min(0, "Monthly cash flow must be a positive number"),
  projected_annual_cash_flow: z.number().min(0, "Projected annual cash flow must be a positive number"),
  total_tokens: z.bigint().min(BigInt(0), "Total tokens must be a positive number"),
  tokensSold: z.bigint().min(BigInt(0), "Tokens sold must be a positive number"),
  token_price: z.number().min(0, "Token price must be a positive number"),
  blockchain_address: z.string().min(1, "Blockchain address is required"),
  legal_documents_url: z.string().url().optional(),
});
